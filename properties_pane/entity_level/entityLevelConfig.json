/*
* Copyright © 2016-2019 by IntegrIT S.A. dba Hackolade.  All rights reserved.
*
* The copyright to the computer software herein is the property of IntegrIT S.A.
* The software may be used and/or copied only with the written permission of 
* IntegrIT S.A. or in accordance with the terms and conditions stipulated in 
* the agreement/contract under which the software has been supplied. 

In order to define custom properties for any object's properties pane, you may copy/paste from the following,
making sure that you maintain a proper JSON format.

			{
				"propertyName": "Simple text",
				"propertyKeyword": "simpletextProp",
				"propertyType": "text",
				"sampleGen": "&containerName|&entityName|&random|<value>"
			},
			{
				"propertyName": "Text area",
				"propertyKeyword": "textareaProp",
				"propertyTooltip": "Popup for multi-line text entry",
				"propertyType": "details",
				"template": "textarea"
			},
			{
				"propertyName": "Dropdown selection",
				"propertyKeyword": "dropdownProp",
				"propertyTooltip": "Select from list of options",
				"propertyType": "select",
				"options": [
					"Option 1",
					"Option 2",
					"Option 3",
					"Option 4"
				]
			},
			{
				"propertyName": "Numeric",
				"propertyKeyword": "numericProp",
				"propertyValidate": true,
				"propertyType": "numeric",
				"valueType": "number",
				"allowNegative": false,
				"sampleGen": "&containerName|&entityName|&random|<value>"
			},
			{
				"propertyName": "Checkbox",
				"propertyKeyword": "checkboxProp",
				"propertyType": "checkbox"
			},
			{
				"propertyName": "Group",
				"propertyType": "group",
				"propertyKeyword": "grpProp",
				"propertyTooltip": "",
				"structure": [
					{
						"propertyName": "Simple Grp Text",
						"propertyKeyword": "simpleGrpText",
						"propertyTooltip": "",
						"propertyType": "text"
					},
					{
						"propertyName": "Group Number",
						"propertyKeyword": "grpNumber",
						"propertyType": "numeric",
						"valueType": "number",
						"allowNegative": false
					}
				]
			},
// “groupInput” can have the following states - 0 items, 1 item, and many items.
// “blockInput” has only 2 states - 0 items or 1 item. 
// This gives us an easy way to represent it as an object and not as an array internally which is beneficial for processing 
// and forward-engineering in particular.
			{
				"propertyName": "Block",
				"propertyType": "block",
				"propertyKeyword": "grpProp",
				"propertyTooltip": "",
				"structure": [
					{
						"propertyName": "Simple Grp Text",
						"propertyKeyword": "simpleGrpText",
						"propertyTooltip": "",
						"propertyType": "text"
					},
					{
						"propertyName": "Group Number",
						"propertyKeyword": "grpNumber",
						"propertyType": "numeric",
						"valueType": "number",
						"allowNegative": false
					}
				]
			},
			{
				"propertyName": "Field List",
				"propertyKeyword": "keyList",
				"propertyType": "fieldList",
				"template": "orderedList"
			}, 
			{
				"propertyName": "List with attribute",
				"propertyKeyword": "keyListOrder",
				"propertyType": "fieldList",
				"template": "orderedList",
				"attributeList": [
					"ascending",
					"descending"
				]
			}

*/

[
	{
		"lowerTab": "Details",
		"structure": [
			{
				"propertyName": "Description",
				"propertyKeyword": "description",
				"propertyTooltip": "description",
				"addTimestampButton": false,
				"propertyType": "details",
				"template": "textarea"
			},
			{
				"propertyName": "Table type",
				"propertyKeyword": "tableType",
				"propertyTooltip": "Select from list of options",
				"defaultValue": "Native",
				"propertyType": "select",
				"options": ["Native", "External"]
			},
			{
				"propertyName": "Table role",
				"propertyKeyword": "tableRole",
				"propertyTooltip": "Select from list of options",
				"propertyType": "select",
				"options": ["Dimension", "Fact", "Outrigger", "Staging"],
				"dependency": {
					"level": "model",
					"key": "modelingMethodology",
					"value": "Dimensional"
				}
			},
			{
				"propertyName": "Vault component",
				"propertyKeyword": "vaultComponent",
				"propertyTooltip": "Select from list of options",
				"propertyType": "select",
				"options": ["Hub", "Link", "Satellite", "Bridge", "Point in Time", "Reference"],
				"dependency": {
					"level": "model",
					"key": "modelingMethodology",
					"value": "Vault"
				}
			},
			{
				"propertyName": "Or replace",
				"propertyKeyword": "orReplace",
				"propertyTooltip": "Cannot appear with IF NOT EXISTS.",
				"propertyType": "checkbox",
				"dependency": {
					"type": "or",
					"values": [
						{
							"key": "ifNotExist",
							"value": false
						},
						{
							"key": "ifNotExist",
							"exists": false
						}
					]
				}
			},
			{
				"propertyName": "If not exist",
				"propertyKeyword": "ifNotExist",
				"propertyTooltip": "Cannot appear with OR REPLACE.",
				"propertyType": "checkbox",
				"dependency": {
					"type": "or",
					"values": [
						{
							"key": "orReplace",
							"value": false
						},
						{
							"key": "orReplace",
							"exists": false
						}
					]
				}
			},
			{
				"propertyName": "Temporary",
				"propertyKeyword": "temporary",
				"propertyType": "checkbox"
			},
			{
				"propertyName": "Expiration (ms)",
				"propertyKeyword": "expiration",
				"propertyTooltip": "Expiration in MS",
				"propertyType": "numeric",
				"valueType": "number",
				"step": 1,
				"allowNegative": false
			},
			{
				"propertyName": "Partitioning",
				"propertyKeyword": "partitioning",
				"propertyTooltip": "Select from list of options",
				"defaultValue": "No partitioning",
				"propertyType": "select",
				"options": ["No partitioning", "By ingestion time", "By time-unit column", "By integer-range"],
				"dependency": {
					"type": "not",
					"values": {
						"key": "tableType",
						"value": "External"
					}
				}
			},
			{
				"propertyName": "Partitioning filter required",
				"propertyKeyword": "partitioningFilterRequired",
				"propertyType": "checkbox",
				"dependency": {
					"type": "and",
					"values": [
						{
							"type": "not",
							"values": {
								"key": "tableType",
								"value": "External"
							}
						},
						{
							"key": "partitioning",
							"value": "By ingestion time"
						}
					]
				}
			},
			{
				"propertyName": "Partitioning type",
				"propertyKeyword": "partitioningType",
				"defaultValue": "",
				"propertyType": "select",
				"options": ["", "By day", "By hour", "By month", "By year"],
				"dependency": {
					"type": "and",
					"values": [
						{
							"type": "not",
							"values": {
								"key": "tableType",
								"value": "External"
							}
						},
						{
							"key": "partitioning",
							"value": "By ingestion time"
						}
					]
				}
			},
			{
				"propertyName": "Partition by",
				"propertyKeyword": "timeUnitpartitionKey",
				"propertyType": "primaryKeySetter",
				"abbr": "PK",
				"templateOptions": {
					"maxFields": 4
				},
				"dependency": {
					"type": "and",
					"values": [
						{
							"type": "not",
							"values": {
								"key": "tableType",
								"value": "External"
							}
						},
						{
							"key": "partitioning",
							"value": "By time-unit column"
						}
					]
				}
			},
			{
				"propertyName": "Range partition",
				"propertyType": "group",
				"propertyTooltip": "",
				"propertyKeyword": "rangeOptions",
				"groupItemLimit": 1,
				"structure": [
					{
						"propertyName": "Partition by",
						"propertyKeyword": "rangePartitionKey",
						"propertyType": "primaryKeySetter",
						"abbr": "PK",
						"templateOptions": {
							"maxFields": 4
						}
					},
					{
						"propertyName": "Start",
						"propertyKeyword": "rangeStart",
						"propertyType": "numeric",
						"valueType": "number",
						"step": 1,
						"allowNegative": false
					},
					{
						"propertyName": "End",
						"propertyKeyword": "rangeEnd",
						"propertyType": "numeric",
						"valueType": "number",
						"step": 1,
						"allowNegative": false
					},
					{
						"propertyName": "Interval",
						"propertyKeyword": "rangeinterval",
						"propertyType": "numeric",
						"valueType": "number",
						"step": 1,
						"allowNegative": false
					}
				],
				"dependency": {
					"type": "and",
					"values": [
						{
							"type": "not",
							"values": {
								"key": "tableType",
								"value": "External"
							}
						},
						{
							"key": "partitioning",
							"value": "By integer-range"
						}
					]
				}
			},
			{
				"propertyName": "Cluster by",
				"propertyKeyword": "clusteringKey",
				"dependency": {
					"type": "not",
					"values": {
						"key": "tableType",
						"value": "External"
					}
				},
				"propertyType": "compositeKeySetter",
				"disabledItemStrategy": "default",
				"abbr": "CK",
				"setPrimaryKey": false,
				"template": "collectiontree",
				"isCompositeKey": true,
				"templateOptions": {
					"maxFields": 4
				}
			},
			{
				"propertyName": "Encryption",
				"propertyKeyword": "encryption",
				"propertyTooltip": "Data is encrypted automatically. Select an encryption key management solution.",
				"defaultValue": "Google-managed",
				"propertyType": "select",
				"options": ["Google-managed", "Customer-managed"]
			},
			{
				"propertyName": "Encryption key",
				"propertyKeyword": "customerEncryptionKey",
				"propertyTooltip": "Keys can be configured in your Cloud KMS settings",
				"propertyType": "text",
				"dependency": {
					"key": "encryption",
					"value": "Customer-managed"
				}
			},
			{
				"propertyName": "Labels",
				"propertyType": "group",
				"propertyKeyword": "labels",
				"structure": [
					{
						"propertyName": "Key",
						"propertyKeyword": "labelKey",
						"propertyType": "text"
					},
					{
						"propertyName": "Value",
						"propertyKeyword": "labelValue",
						"propertyType": "text"
					}
				]
			},
			{
				"propertyName": "Table options",
				"propertyKeyword": "tableOptions",
				"propertyType": "block",
				"propertyTooltip": "The option list specifies options for creating the external table.",
				"dependency": {
					"key": "tableType",
					"value": "External"
				},
				"structure": [
					{
						"propertyName": "Format",
						"propertyKeyword": "format",
						"propertyTooltip": "The format of the external data.",
						"propertyType": "select",
						"requiredProperty": true,
						"options": [
							"",
							"AVRO",
							"CSV",
							"DATASTORE_BACKUP",
							"GOOGLE_SHEETS",
							"JSON",
							"ORC",
							"PARQUET",
							"CLOUD_BIGTABLE"
						]
					},
					{
						"propertyName": "uris",
						"propertyKeyword": "uris",
						"propertyTooltip": "An array of fully qualified URIs for the external data locations.",
						"propertyType": "group",
						"requiredProperty": true,
						"structure": [
							{
								"propertyName": "uri",
								"propertyKeyword": "uri",
								"propertyTooltip": "",
								"propertyType": "text"
							}
						],
						"dependency": {
							"type": "not",
							"values": {
								"key": "format",
								"value": "CLOUD_BIGTABLE"
							}
						}
					},
					{
						"propertyName": "uris",
						"propertyKeyword": "bigtableUri",
						"propertyTooltip": "The URI identifying the Bigtable table to use as a data source.",
						"propertyType": "details",
						"template": "textarea",
						"valueType": "string",
						"markdown": false,
						"dependency": {
							"key": "format",
							"value": "CLOUD_BIGTABLE"
						}
					},
					{
						"propertyName": "autodetect",
						"propertyKeyword": "autodetect",
						"propertyTooltip": "Specify whether BigQuery should detect schema automatically.",
						"propertyType": "checkbox"
					},
					{
						"propertyName": "decimal_target_types",
						"propertyKeyword": "decimal_target_types",
						"propertyTooltip": "Determines how to convert a Decimal type.",
						"propertyType": "group",
						"structure": [
							{
								"propertyName": "value",
								"propertyKeyword": "value",
								"propertyTooltip": "",
								"propertyType": "text"
							}
						]
					},
					{
						"propertyName": "allow_quoted_newlines",
						"propertyKeyword": "allow_quoted_newlines",
						"propertyTooltip": "If true, allow quoted data sections that contain newline characters in the file.",
						"propertyType": "checkbox",
						"dependency": {
							"key": "format",
							"value": "CSV"
						}
					},
					{
						"propertyName": "allow_jagged_rows",
						"propertyKeyword": "allow_jagged_rows",
						"propertyTooltip": "If true, allow rows that are missing trailing optional columns.",
						"propertyType": "checkbox",
						"dependency": {
							"key": "format",
							"value": "CSV"
						}
					},
					{
						"propertyName": "quote",
						"propertyKeyword": "quote",
						"propertyTooltip": "The string used to quote data sections in a CSV file. If your data contains quoted newline characters, also set the allow_quoted_newlines property to true.",
						"propertyType": "text",
						"dependency": {
							"key": "format",
							"value": "CSV"
						}
					},
					{
						"propertyName": "skip_leading_rows",
						"propertyKeyword": "skip_leading_rows",
						"propertyTooltip": "The number of rows at the top of a file to skip when reading the data.",
						"propertyType": "numeric",
						"valueType": "integer",
						"allowNegative": false,
						"dependency": {
							"key": "format",
							"value": ["CSV", "GOOGLE_SHEETS"]
						}
					},
					{
						"propertyName": "preserve_ascii_control_characters",
						"propertyKeyword": "preserve_ascii_control_characters",
						"propertyTooltip": "If true, then the embedded ASCII control characters which are the first 32 characters in the ASCII table, ranging from '\\x00' to '\\x1F', are preserved.",
						"propertyType": "checkbox",
						"dependency": {
							"key": "format",
							"value": "CSV"
						}
					},
					{
						"propertyName": "null_marker",
						"propertyKeyword": "null_marker",
						"propertyTooltip": "The string that represents NULL values in a CSV file.",
						"propertyType": "text",
						"dependency": {
							"key": "format",
							"value": "CSV"
						}
					},
					{
						"propertyName": "field_delimiter",
						"propertyKeyword": "field_delimiter",
						"propertyTooltip": "The separator for fields in a CSV file.",
						"propertyType": "text",
						"dependency": {
							"key": "format",
							"value": "CSV"
						}
					},
					{
						"propertyName": "encoding",
						"propertyKeyword": "encoding",
						"propertyTooltip": "The character encoding of the data. Supported values include: UTF8 (or UTF-8), ISO_8859_1 (or ISO-8859-1).",
						"propertyType": "text",
						"dependency": {
							"key": "format",
							"value": "CSV"
						}
					},
					{
						"propertyName": "ignore_unknown_values",
						"propertyKeyword": "ignore_unknown_values",
						"propertyTooltip": "If true, ignore extra values that are not represented in the table schema, without returning an error.",
						"propertyType": "checkbox",
						"dependency": {
							"key": "format",
							"value": ["JSON", "CSV"]
						}
					},
					{
						"propertyName": "compression",
						"propertyKeyword": "compression",
						"propertyTooltip": "The compression type of the data source. Supported values include: GZIP. If not specified, the data source is uncompressed.",
						"propertyType": "text",
						"dependency": {
							"key": "format",
							"value": ["CSV", "JSON"]
						}
					},
					{
						"propertyName": "max_bad_records",
						"propertyKeyword": "max_bad_records",
						"propertyTooltip": "The maximum number of bad records to ignore when reading the data.",
						"propertyType": "numeric",
						"valueType": "integer",
						"allowNegative": false,
						"dependency": {
							"key": "format",
							"value": ["CSV", "JSON", "GOOGLE_SHEETS"]
						}
					},
					{
						"propertyName": "require_hive_partition_filter",
						"propertyKeyword": "require_hive_partition_filter",
						"propertyTooltip": "If true, all queries over this table require a partition filter that can be used to eliminate partitions when reading data.",
						"propertyType": "checkbox",
						"dependency": {
							"key": "format",
							"value": ["AVRO", "CSV", "JSON", "ORC", "PARQUET"]
						}
					},
					{
						"propertyName": "hive_partition_uri_prefix",
						"propertyKeyword": "hive_partition_uri_prefix",
						"propertyTooltip": "A common prefix for all source URIs before the partition key encoding begins. Applies only to hive-partitioned external tables.",
						"propertyType": "text",
						"dependency": {
							"key": "format",
							"value": ["JSON", "CSV", "AVRO", "ORC", "PARQUET"]
						}
					},
					{
						"propertyName": "sheet_range",
						"propertyKeyword": "sheet_range",
						"propertyTooltip": "Range of a Google Sheets spreadsheet to query from. Example: sheet1!A1:B20",
						"propertyType": "text",
						"dependency": {
							"key": "format",
							"value": "GOOGLE_SHEETS"
						}
					},
					{
						"propertyName": "reference_file_schema_uri",
						"propertyKeyword": "reference_file_schema_uri",
						"propertyTooltip": "User provided reference file with the table schema.",
						"propertyType": "text",
						"dependency": {
							"key": "format",
							"value": ["AVRO", "ORC", "PARQUET"]
						}
					},
					{
						"propertyName": "projection_fields",
						"propertyKeyword": "projection_fields",
						"propertyTooltip": "A list of entity properties to load.",
						"propertyType": "text",
						"dependency": {
							"key": "format",
							"value": "DATASTORE_BACKUP"
						}
					},
					{
						"propertyName": "json_extension",
						"propertyKeyword": "json_extension",
						"propertyTooltip": "For JSON data, indicates a particular JSON interchange format. If not specified, BigQuery reads the data as generic JSON records.",
						"propertyType": "text",
						"dependency": {
							"key": "format",
							"value": "JSON"
						}
					},
					{
						"propertyName": "enable_list_inference",
						"propertyKeyword": "enable_list_inference",
						"propertyTooltip": "If true, use schema inference specifically for Parquet LIST logical type.",
						"propertyType": "checkbox",
						"dependency": {
							"key": "format",
							"value": "PARQUET"
						}
					},
					{
						"propertyName": "enum_as_string",
						"propertyKeyword": "enum_as_string",
						"propertyTooltip": "If true, infer Parquet ENUM logical type as STRING instead of BYTES by default.",
						"propertyType": "checkbox",
						"dependency": {
							"key": "format",
							"value": "PARQUET"
						}
					},
					{
						"propertyName": "enable_logical_types",
						"propertyKeyword": "enable_logical_types",
						"propertyTooltip": "If true, convert Avro logical types into their corresponding SQL types.",
						"propertyType": "checkbox",
						"dependency": {
							"key": "format",
							"value": "AVRO"
						}
					},
					{
						"propertyName": "bigtable_options",
						"propertyKeyword": "bigtable_options",
						"propertyTooltip": "Only required when creating a Bigtable external table. Specifies the schema of the Bigtable external table in JSON format.",
						"propertyType": "details",
						"template": "textAreaJson",
						"helpUrl": "https://cloud.google.com/bigquery/docs/reference/rest/v2/tables#bigtableoptions",
						"dependency": {
							"key": "format",
							"value": "CLOUD_BIGTABLE"
						}
					}
				]
			},
			{
				"propertyName": "Comments",
				"propertyKeyword": "comments",
				"propertyTooltip": "comments",
				"addTimestampButton": true,
				"propertyType": "details",
				"template": "textarea",
				"valueType": "string"
			}
		],
		"columnsRatio": [3.7, 5]
	},
	{
		"lowerTab": "Composite keys",
		"structure": [
			{
				"propertyName": "Primary key",
				"propertyType": "group",
				"groupItemLimit": 1,
				"propertyKeyword": "primaryKey",
				"propertyTooltip": {
					"disabled": [
						{
							"tooltip": "Remove the existing single column primary key definition prior to unlock the possibility to create a composite primary key definition for this table",
							"dependency": {
								"type": "and",
								"values": [
									{
										"level": "children",
										"key": "primaryKey",
										"value": true
									},
									{
										"type": "not",
										"values": {
											"level": "children",
											"key": "compositePrimaryKey",
											"value": true
										}
									}
								]
							}
						},
						{
							"tooltip": "Remove or update the existing composite primary key definition prior to unlock the possibility to create a new composite primary key definition for this table",
							"dependency": {
								"key": "primaryKey",
								"minLength": 1
							}
						}
					]
				},
				"disabledOnCondition": [
					{
						"level": "children",
						"value": {
							"type": "and",
							"values": [
								{
									"key": "primaryKey",
									"value": true
								},
								{
									"type": "or",
									"values": [
										{
											"key": "compositePrimaryKey",
											"value": false
										},
										{
											"key": "compositePrimaryKey",
											"exist": false
										}
									]
								},
								{
									"type": "or",
									"values": [
										{
											"key": "compositeUniqueKey",
											"value": false
										},
										{
											"key": "compositeUniqueKey",
											"exist": false
										}
									]
								}
							]
						}
					}
				],
				"structure": [
					{
						"propertyName": "Key",
						"propertyKeyword": "compositePrimaryKey",
						"propertyType": "primaryKeySetter",
						"abbr": "pk"
					}
				]
			}
		]
	}
]
